{"version":3,"sources":["until/fetch.js","main/main.js","index.js"],"names":["getData","url","a","dirSolve","fetch","method","headers","response","status","json","ACTIONS","reducer","state","count","action","console","log","type","Main","useReducer","dispatch","className","onClick","then","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAaA,EAAO,uCAAC,WAAMC,GAAN,mBAAAC,EAAA,6DAEXC,EAFW,sCAEgCF,GAFhC,SAGQG,MAAMD,EAAU,CACrCE,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,eAAgB,sBAPP,UAYK,OATdC,EAHS,QAYJC,OAZI,iCAaID,EAASE,OAbb,cAaTA,EAbS,yBAcRA,GAdQ,kCAiBR,GAjBQ,4CAAD,sD,OCKdC,EACS,YADTA,EAES,YAGTC,EAAU,WAA0C,IAAzCC,EAAwC,uDAR/B,CACtBC,MAAO,GAO8BC,EAAgB,uDAAP,GAEhD,OADEC,QAAQC,IAAIJ,GACNE,EAAOG,MACb,KAAKP,EACH,MAAO,CAAEG,MAAOD,EAAMC,MAAQ,GAChC,KAAKH,EACD,OAAGE,EAAMC,OAAO,EACL,CAAEA,MAAOD,EAAMC,MAAQ,QAEhC,EAGN,QACE,OAAOD,IAGAM,EAAO,WAClB,MAA0BC,qBAAWR,EAAS,CAACE,MAAO,IAAtD,mBAAOD,EAAP,KAAcQ,EAAd,KAiCA,OAlBI,+BACE,sBAAKC,UAAU,yBAAf,UACA,uBAAOA,UAAU,YAAjB,SAA8BT,EAAMA,EAAMC,MAAM,IAC9C,sBAAKQ,UAAU,cAAf,UACE,wBAAQA,UAAU,2BAA2BC,QAAS,WAjB9DF,EAAS,CAAEH,KAAMP,KAiBT,SACE,uBAAOW,UAAU,UAAjB,2BAEF,wBAAQA,UAAU,yBAA0BC,QAAS,WAjB7DF,EAAS,CAAEH,KAAMP,KAiBT,SACE,uBAAOW,UAAU,UAAjB,2BAEF,wBAAQA,UAAU,yBAA0BC,QAAS,WAhB7DtB,EADY,UACCuB,MAAK,SAAChB,GACjBQ,QAAQC,IAAIT,OAeN,SACE,uBAAOc,UAAU,UAAjB,6BChDdG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5013af05.chunk.js","sourcesContent":["export const getData=async(url)=>{\n\n    const dirSolve =  `http://157.100.171.205:4000/${url}`\n      const response = await fetch(dirSolve, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }   \n    }); \n    \n    \n    if (response.status===200){\n      const json = await response.json()\n      return json\n    }else { \n      \n      return false\n      }\n   \n  }\n  export const sendData=async(data,url)=>{\n    const dirSolve = `http://localhost:4000${url}`\n      const response = await fetch(dirSolve, {\n        method: 'POST',\n        body: data,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }   \n    });\n    \n    if (response.status===(200)){\n      const json = await response.json()\n      return json\n    }else { \n      \n      return false\n      }\n    }","import React, { useReducer } from \"react\";\nimport { getData } from \"../until/fetch\";\nconst initialState = ()=>({\n    count: 0\n})\nconst ACTIONS = {\n    INCREMENT: \"INCREMENT\",\n    DECREMENT: \"DECREMENT\",\n    RESET: \"RESET\"\n}\nconst reducer = (state = initialState(), action = {}) => {\n    console.log(state)\n  switch (action.type) {\n    case ACTIONS.INCREMENT:\n      return { count: state.count + 1 };\n    case ACTIONS.DECREMENT:\n        if(state.count>=1){\n            return { count: state.count - 1 };\n        }else{\n          return;\n        }\n\n    default:\n      return state\n  }\n};\nexport const Main = () => {\n  const [state, dispatch] = useReducer(reducer, {count: 0});\n  const increment = () => {\n    dispatch({ type: ACTIONS.INCREMENT });\n  };\n  const decrement = () => {\n    dispatch({ type: ACTIONS.DECREMENT });\n  };\n  const testfetch = ()=>{\n    const url = \"prueba\"\n    getData(url).then((response)=>{\n      console.log(response)\n    })\n  }\n  const SchemmaMain = () => {\n    return (\n      <body>\n        <div className=\"g-container one-column\">\n        <small className=\"txt-title\">{state?state.count:0}</small>\n          <div className=\"two-columns\">\n            <button className=\"button-increment green-c\" onClick={()=>{increment()}}>\n              <small className=\"txt-btn\">Incrementar</small>\n            </button>\n            <button className=\"button-increment red-c\"  onClick={()=>{decrement()}}>\n              <small className=\"txt-btn\">Decrementar</small>\n            </button>\n            <button className=\"button-increment red-c\"  onClick={()=>{testfetch()}}>\n              <small className=\"txt-btn\">test</small>\n            </button>\n          </div>\n        </div>\n      </body>\n    );\n  };\n  return SchemmaMain();\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport {Main} from './main/main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}